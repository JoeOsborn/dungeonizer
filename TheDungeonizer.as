package{	import com.dungeonizer.DrawingCanvas;	import com.dungeonizer.Dungeon;	import com.dungeonizer.DungeonViewer;	import com.dungeonizer.EntityViewer;	import com.dungeonizer.Monster;	import com.dungeonizer.Player;	import com.dungeonizer.Princess;		import flash.display.Sprite;	import flash.events.*;	public class TheDungeonizer extends Sprite	{				public var dungeon : Dungeon;		private var dungeonViewer : DungeonViewer;		private var drawingCanvas:DrawingCanvas;		private var touchArea:Sprite;		public function TheDungeonizer()		{			trace("test");			super();			dungeon = new Dungeon();									dungeonViewer = new DungeonViewer(dungeon);			drawingCanvas = new DrawingCanvas(dungeon, dungeonViewer);						addChild(drawingCanvas);			addChild(dungeonViewer);						setupEntityTest();			drawingCanvas.drawMapState();									  		addEventListener(flash.events.Event.ADDED_TO_STAGE, addedToStageHandler);		}		public function addedToStageHandler(e : Event) : void		{      stage.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);      stage.addEventListener(KeyboardEvent.KEY_UP, keyUpHandler);            //had to move this stuff here -- flex doesn't initialize the stage variable      //until a thing is added to the stage.			touchArea = new Sprite();			initTouchArea(touchArea);			touchArea.addEventListener(MouseEvent.MOUSE_DOWN,drawingCanvas.handleMouseDown);			touchArea.addEventListener(MouseEvent.MOUSE_MOVE,drawingCanvas.handleMouseMove);			touchArea.addEventListener(MouseEvent.MOUSE_UP,drawingCanvas.handleMouseUp);			addChild(touchArea);		}    public function keyDownHandler(e : KeyboardEvent) : void    {		if(dungeon.player == null) { return; }    	//trace(e.keyCode);      if(e.keyCode == 37)      {        dungeon.player.movement["left"] = true;      }      else if(e.keyCode == 38)       {        dungeon.player.movement["up"] = true;      }      else if(e.keyCode == 39)      {        dungeon.player.movement["right"] = true;      }      else if(e.keyCode == 40)      {        dungeon.player.movement["down"] = true;      }      else if(e.keyCode == 32)      {      	/*if(dungeonViewer.showGrid){      	         dungeonViewer.showGrid = false;      	       } else {      	         dungeonViewer.showGrid = true;      	       }*/      	if(!dungeon.player.slashing)      	{      	  dungeon.player.slashing = true;      	}      }    }    public function keyUpHandler(e : KeyboardEvent) : void    {		if(dungeon.player == null) { return; }      if(e.keyCode == 37)      {        dungeon.player.movement["left"] = false;      }      else if(e.keyCode == 38)       {        dungeon.player.movement["up"] = false;      }      else if(e.keyCode == 39)      {        dungeon.player.movement["right"] = false;      }      else if(e.keyCode == 40)      {        dungeon.player.movement["down"] = false;      }      else if(e.keyCode == 32)
      {
    	  dungeon.player.slashing = false;
      }    }        private function initTouchArea(area:Sprite) : void {    	area.graphics.lineStyle(1,0x000000,0);    	area.graphics.beginFill(0x000000,0);    	area.graphics.lineTo(stage.stageWidth,0);    	area.graphics.lineTo(stage.stageWidth,stage.stageHeight);    	area.graphics.lineTo(0,stage.stageHeight);    	area.graphics.lineTo(0,0);    }    private function handleMouseDown(ev:MouseEvent) : void {    	drawingCanvas.handleMouseDown(ev);    }    private function handleMouseMove(ev:MouseEvent) : void {    	drawingCanvas.handleMouseMove(ev);    }    private function handleMouseUp(ev:MouseEvent) : void {    	drawingCanvas.handleMouseUp(ev);    }        public function setupEntityTest() : void    {/*      map.setBox(map.FLOOR, 9,27, 9, 6);      map.setBox(map.FLOOR, 9,18, 9, 6);      map.setBox(map.FLOOR, 3, 6, 6,27);      map.setBox(map.FLOOR, 9, 6,18, 6);      map.setBox(map.FLOOR,27, 6, 6,27);*/            /*      for(var cy : int = 0; cy < map.HEIGHT; cy++)      {        var line : String = "";        for(var cx : int = 0; cx < map.WIDTH; cx++)        {          line += new String(map.cellAtXY(cx, cy));          line += " ";        }        trace(line);      }      */      dungeon.map.setBox(dungeon.map.FLOOR, 5, 50, 20, 20);      dungeon.map.setBox(dungeon.map.FLOOR, 135, 50, 20, 20);      dungeon.player = new Player(dungeon.map, 10, 60);      dungeon.addEntity(dungeon.player);/*      var follower : Monster = new Monster(dungeon.map, 130, 60,  4.0);      dungeon.addMonster(follower);      //mp : Map, px : Number, py : Number, sz : Number      var p1 : Princess = new Princess(dungeon.map, 30, 60, 2);      var p2 : Princess = new Princess(dungeon.map, 50, 60, 2);      var p3 : Princess = new Princess(dungeon.map, 80, 60, 6);      dungeon.addEntity(p1);      dungeon.addEntity(p2);      dungeon.addEntity(p3);      */      var playerClip = new HeroClip();     /* var monsterClip = new MonsterClip();      monsterClip.scaleX *= follower.size;      monsterClip.scaleY *= follower.size;            var p1Clip = new PrincessClip();      p1Clip.scaleX *= p1.size;      p1Clip.scaleY *= p1.size;            var p2Clip = new PrincessClip();      p2Clip.scaleX *= p2.size;      p2Clip.scaleY *= p2.size;            var p3Clip = new PrincessClip();      p3Clip.scaleX *= p3.size;      p3Clip.scaleY *= p3.size;*/            var pe:EntityViewer = new EntityViewer(dungeon.player, playerClip);      pe.clip.gotoAndPlay("right");     /* var f:EntityViewer = new EntityViewer(follower, monsterClip);      var pc1:EntityViewer = new EntityViewer(p1, p1Clip);      var pc2:EntityViewer = new EntityViewer(p2, p2Clip);      var pc3:EntityViewer = new EntityViewer(p3, p3Clip);      */      dungeonViewer.addEntityViewer(pe);     /* dungeonViewer.addEntityViewer(f);      dungeonViewer.addEntityViewer(pc1);      dungeonViewer.addEntityViewer(pc2);      dungeonViewer.addEntityViewer(pc3);*/      var bc = new BoxClip();      bc.x = 725;      bc.y = 295;            dungeonViewer.addChild(bc);                } }	}